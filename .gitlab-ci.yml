.build_template:
  artifacts:
    paths:
      - .env
  image: docker:dind-rootless
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  services:
    -   name: docker:dind-rootless
        alias: docker
        command: [ "--tls=false" ]
  before_script:
    - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
  script:
    - echo "$ENV" >> .env
    - docker build -t $CI_REGISTRY/$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA -f deployment/Dockerfile .
    - docker push $CI_REGISTRY/$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA

.deploy_template:
  image: kroniak/ssh-client:3.9
  stage: deploy
  before_script:
    - eval $(ssh-agent -s)
    - echo "$CD_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
  script:
    - echo "IMAGE_NAME=$CI_REGISTRY/$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA" >> .env.deployment
    - echo "CONTAINER_NAME=$CD_CONTAINER_NAME" >> .env.deployment
    - echo "$ENV" >> .env
    - export IMAGE_NAME=$IMAGE_NAME
    - export CONTAINER_NAME=$CONTAINER_NAME
    - chmod +x ./deployment/update_services.sh
    - ./deployment/update_services.sh

.build-only-template:
  stage: build
  image: node:16.17.0-alpine
  artifacts:
    untracked: true
  script:
    - echo "$ENV" >> .env
    - yarn install
    - export NODE_OPTIONS=--max-old-space-size=4096
    - yarn build

.deploy-aws-template:
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  script:
    - aws s3 sync build s3://$CI_AWS_S3_BUCKET
    - aws cloudfront create-invalidation --distribution-id $CI_AWS_CLOUDFRONT_DISTRIBUTION_ID --paths "/*" --no-cli-pager

stages:
  - build
  - deploy

build-staging:
  extends: .build_template
  only:
    - staging
  stage: build
  environment: staging

deploy-staging:
  extends: .deploy_template
  only:
    - staging
  environment: staging
  stage: deploy

build-enhancement:
  extends: .build_template
  only:
    - enhancement
  stage: build
  environment: enhancement

deploy-enhancement:
  extends: .deploy_template
  only:
    - enhancement
  environment: enhancement
  stage: deploy

build-production:
  extends: .build-only-template
  only:
    - production
  stage: build
  environment: production

deploy-production:
  extends: .deploy-aws-template
  dependencies:
    - build-production
  only:
    - production
  environment: production
  stage: deploy
